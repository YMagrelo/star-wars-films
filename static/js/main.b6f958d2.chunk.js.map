{"version":3,"sources":["api.js","redux/reducer.jsx","components/EpisodesList.jsx","components/EpisodeDetails.jsx","App.jsx","redux/store.jsx","index.js"],"names":["getFilmsDetails","filmId","fetch","then","response","json","initialState","films","filmDetails","connect","state","dispatch","getFilms","a","data","type","payload","results","props","useEffect","className","map","film","url","slice","key","episode_id","to","title","EpisodeDetailsWithRouter","withRouter","details","getFilmDetails","match","params","opening_crawl","director","producer","release_date","characters","char","planets","planet","starships","starship","vehicles","vehicle","species","specie","getFilmDetailsThunk","App","path","component","EpisodesList","exact","EpisodeDetails","store","createStore","action","applyMiddleware","thunkMiddleware","window","ReactDOM","render","document","getElementById"],"mappings":"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","file":"static/js/main.b6f958d2.chunk.js","sourcesContent":["const BASE_URL = 'https://swapi.dev/api/';\n\nexport const getFilms = () => fetch(`${BASE_URL}films/`)\n  .then(response => response.json());\n\nexport const getFilmsDetails = filmId => fetch(`${BASE_URL}films/${filmId}`)\n  .then(response => response.json());\n","import { getFilms, getFilmsDetails } from '../api';\n\nconst GET_FILMS = 'GET_FILMS';\nconst GET_FILM_DETAILS = 'GET_FILM_DETAILS';\n\nconst initialState = {\n  films: [],\n  filmDetails: null,\n};\n\nexport const reducer = (state = initialState, action) => {\n  switch (action.type) {\n    case GET_FILMS:\n      return {\n        ...state,\n        films: action.payload,\n      };\n\n    case GET_FILM_DETAILS:\n      return {\n        ...state,\n        filmDetails: action.payload,\n      };\n\n    default:\n      return state;\n  }\n};\n\nconst setFilms = payload => ({\n  type: GET_FILMS,\n  payload,\n});\n\nconst setFilmsDetails = payload => ({\n  type: GET_FILM_DETAILS,\n  payload,\n});\n\nexport const getFilmsThunk = () => async(dispatch) => {\n  const data = await getFilms();\n\n  dispatch(setFilms(data.results));\n};\n\nexport const getFilmDetailsThunk = filmId => async(dispatch) => {\n  const data = await getFilmsDetails(filmId);\n\n  dispatch(setFilmsDetails(data));\n};\n","import React, { useEffect } from 'react';\nimport './EpisodesList.scss';\nimport { connect } from 'react-redux';\nimport { getFilmsThunk } from '../redux/reducer';\nimport { NavLink } from 'react-router-dom';\n\nconst EpisodesList = (props) => {\n  const { films, getFilms } = props;\n\n  useEffect(() => {\n    getFilms();\n  }, []);\n\n  return (\n    <div className=\"episodes\">\n      <h1 className=\"episodes__heading\">The list of the star wars episodes</h1>\n      <ul className=\"episodes__list\">\n        {films.map((film) => {\n          const filmId = film.url.slice(-2, -1);\n\n          return (\n            <li\n              key={film.episode_id}\n              className=\"episodes__item\"\n            >\n\n              <NavLink to={`/films/${filmId}`}>{film.title}</NavLink>\n              {filmId}\n            </li>\n          );\n        })}\n      </ul>\n    </div>\n  );\n};\n\nconst mapStateToProps = state => ({\n  films: state.films,\n});\n\nconst mapDispatchToProps = dispatch => ({\n  getFilms: () => dispatch(getFilmsThunk()),\n});\n\nexport default connect(mapStateToProps, mapDispatchToProps)(EpisodesList);\n","import React, { useEffect } from 'react';\nimport './EpisodeDetails.scss';\nimport { connect } from 'react-redux';\nimport { NavLink, withRouter } from 'react-router-dom';\nimport { getFilmDetailsThunk } from '../redux/reducer';\n\nconst EpisodeDetails = (props) => {\n  const { details, getFilmDetails } = props;\n  const { filmId } = props.match.params;\n\n  useEffect(() => {\n    getFilmDetails(filmId);\n  }, []);\n\n  return (\n    <div className=\"details\">\n      <NavLink to=\"/\"><span>Back to home page</span></NavLink>\n      <h1 className=\"details__heading\">Episode details</h1>\n\n      {details && (\n        <div className=\"details__details-content content\">\n          <h5 className=\"content__title\">{`Title: ${details.title}`}</h5>\n          <p className=\"content__item\">\n            {`Opening crawl: ${details.opening_crawl}`}\n          </p>\n          <p className=\"content__item\">\n            {`Director: ${details.director}`}\n          </p>\n          <p className=\"content__item\">\n            {`Producer: ${details.producer}`}\n          </p>\n          <p className=\"content__item\">\n            {`Release date: ${details.release_date}`}\n          </p>\n          <ul className=\"content__item\">\n            Characters:\n            {details.characters.map(char => (\n              <li key={char}>{char}</li>\n            ))}\n          </ul>\n          <ul className=\"content__item\">\n            Planets:\n            {details.planets.map(planet => (\n              <li key={planet}>{planet}</li>\n            ))}\n          </ul>\n          <ul className=\"content__item\">\n            Starships:\n            {details.starships.map(starship => (\n              <li key={starship}>{starship}</li>\n            ))}\n          </ul>\n          <ul className=\"content__item\">\n            Vehicles:\n            {details.vehicles.map(vehicle => (\n              <li key={vehicle}>{vehicle}</li>\n            ))}\n          </ul>\n          <ul className=\"content__item\">\n            Species:\n            {details.species.map(specie => (\n              <li key={specie}>{specie}</li>\n            ))}\n          </ul>\n\n        </div>\n      )}\n\n    </div>\n  );\n};\n\nconst mapStateToProps = state => ({\n  details: state.filmDetails,\n});\n\nconst mapDispatchToProps = dispatch => ({\n  getFilmDetails: filmId => dispatch(getFilmDetailsThunk(filmId)),\n});\n\nconst EpisodeDetailsWithRouter = withRouter(EpisodeDetails);\n\nexport default connect(mapStateToProps, mapDispatchToProps)(EpisodeDetailsWithRouter);\n","import React from 'react';\nimport './App.scss';\nimport './resets.scss';\nimport { Route } from 'react-router-dom';\nimport EpisodesList from './components/EpisodesList';\nimport EpisodeDetails from './components/EpisodeDetails';\n\nconst App = props => (\n  <div className=\"app-wrapper\">\n    <Route path=\"/\" component={EpisodesList} exact />\n    <Route path=\"/films/:filmId\" component={EpisodeDetails} />\n  </div>\n);\n\nexport default App;\n\n","import { createStore, applyMiddleware, combineReducers } from 'redux';\nimport thunkMiddleware from 'redux-thunk';\nimport { reducer } from './reducer';\n\nexport const store = createStore(reducer, applyMiddleware(thunkMiddleware));\n\nwindow.store = store;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport { HashRouter } from 'react-router-dom';\nimport { Provider } from 'react-redux';\nimport App from './App';\nimport { store } from './redux/store';\n\nReactDOM.render(\n  <HashRouter>\n    <Provider store={store}>\n      <App />\n    </Provider>\n  </HashRouter>,\n  document.getElementById('root'),\n);\n"],"sourceRoot":""}