{"version":3,"sources":["assets/preloader/Dual_Ring-1s-200px.svg","api.js","redux/reducer.jsx","components/common/Preloader.jsx","components/EpisodesList.jsx","propTypesConstant.js","components/EpisodeDetails.jsx","constants.js","components/Character.jsx","components/Planet.jsx","components/Starship.jsx","App.jsx","redux/store.jsx","index.js"],"names":["module","exports","BASE_URL","getFilmsDetails","filmId","fetch","then","response","json","getCharacter","charId","getPlanet","planetId","getStarship","starshipId","initialState","films","filmDetails","character","planet","starship","Preloader","className","src","preloader","alt","connect","PropTypes","arrayOf","shape","title","string","isRequired","episode_id","number","opening_crawl","director","producer","release_date","characters","planets","starships","vehicles","species","created","edited","url","name","height","mass","hair_color","skin_color","eye_color","birth_year","gender","homeworld","rotation_period","orbital_period","diameter","climate","gravity","terrain","surface_water","population","residents","model","manufacturer","cost_in_credits","length","max_atmosphering_speed","crew","passengers","cargo_capacity","consumables","hyperdrive_rating","MGLT","starship_class","pilots","state","dispatch","getFilms","a","data","type","payload","results","props","useEffect","map","film","slice","key","to","EpisodeDetails","details","getFilmDetails","match","params","char","ship","shipId","vehicle","specie","EpisodeDetailsWithRouter","withRouter","getFilmDetailsThunk","defaultProps","object","Character","CharacterWithRouter","getCharacterThunk","Planet","resident","PlanetWithRouter","getPlanetThunk","Starship","pilot","StarshipWithRouter","console","log","getStarshipThunk","App","path","component","EpisodesList","exact","store","createStore","action","applyMiddleware","thunkMiddleware","window","ReactDOM","render","document","getElementById"],"mappings":"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","file":"static/js/main.27c04149.chunk.js","sourcesContent":["module.exports = __webpack_public_path__ + \"static/media/Dual_Ring-1s-200px.ac96feea.svg\";","const BASE_URL = 'https://swapi.dev/api/';\n\nexport const getFilms = () => fetch(`${BASE_URL}films/`)\n  .then(response => response.json());\n\nexport const getFilmsDetails = filmId => fetch(`${BASE_URL}films/${filmId}`)\n  .then(response => response.json());\n\nexport const getCharacter = charId => fetch(`${BASE_URL}people/${charId}`)\n  .then(response => response.json());\n\nexport const getPlanet = planetId => fetch(`${BASE_URL}planets/${planetId}`)\n  .then(response => response.json());\n\nexport const getStarship = starshipId => fetch(`${BASE_URL}starships/${starshipId}`)\n  .then(response => response.json());\n","import {\n  getFilms,\n  getFilmsDetails,\n  getCharacter,\n  getPlanet,\n  getStarship,\n} from '../api';\n\nconst GET_FILMS = 'GET_FILMS';\nconst GET_FILM_DETAILS = 'GET_FILM_DETAILS';\nconst GET_CHARACTER = 'GET_CHARACTER';\nconst GET_PLANET = 'GET_PLANET';\nconst GET_STARSHIP = 'GET_STARSHIP';\n\nconst initialState = {\n  films: [],\n  filmDetails: null,\n  character: null,\n  planet: null,\n  starship: null,\n};\n\nexport const reducer = (state = initialState, action) => {\n  switch (action.type) {\n    case GET_FILMS:\n      return {\n        ...state,\n        films: action.payload,\n      };\n\n    case GET_FILM_DETAILS:\n      return {\n        ...state,\n        filmDetails: action.payload,\n      };\n\n    case GET_CHARACTER:\n      return {\n        ...state,\n        character: action.payload,\n      };\n\n    case GET_PLANET:\n      return {\n        ...state,\n        planet: action.payload,\n      };\n\n    case GET_STARSHIP:\n      return {\n        ...state,\n        starship: action.payload,\n      };\n\n    default:\n      return state;\n  }\n};\n\nconst setFilms = payload => ({\n  type: GET_FILMS,\n  payload,\n});\n\nconst setFilmsDetails = payload => ({\n  type: GET_FILM_DETAILS,\n  payload,\n});\n\nconst setCharacter = payload => ({\n  type: GET_CHARACTER,\n  payload,\n});\n\nconst setPlanet = payload => ({\n  type: GET_PLANET,\n  payload,\n});\n\nconst setStarship = payload => ({\n  type: GET_STARSHIP,\n  payload,\n});\n\nexport const getFilmsThunk = () => async(dispatch) => {\n  const data = await getFilms();\n\n  dispatch(setFilms(data.results));\n};\n\nexport const getFilmDetailsThunk = filmId => async(dispatch) => {\n  const data = await getFilmsDetails(filmId);\n\n  dispatch(setFilmsDetails(data));\n};\n\nexport const getCharacterThunk = charId => async(dispatch) => {\n  const data = await getCharacter(charId);\n\n  dispatch(setCharacter(data));\n};\n\nexport const getPlanetThunk = planetId => async(dispatch) => {\n  const data = await getPlanet(planetId);\n\n  dispatch(setPlanet(data));\n};\n\nexport const getStarshipThunk = starshipId => async(dispatch) => {\n  const data = await getStarship(starshipId);\nconsole.log(data);\n  dispatch(setStarship(data));\n};\n","import React from 'react';\nimport './Preloader.scss';\nimport preloader from '../../assets/preloader/Dual_Ring-1s-200px.svg';\n\nexport const Preloader = () => (\n  <div className=\"preloader\">\n    <img src={preloader} alt=\"preloader\" className=\"preloader__img\" />\n  </div>\n);\n","import React, { useEffect } from 'react';\nimport './EpisodesList.scss';\nimport PropTypes from 'prop-types';\nimport { connect } from 'react-redux';\nimport { NavLink } from 'react-router-dom';\nimport { getFilmsThunk } from '../redux/reducer';\nimport { Preloader } from './common/Preloader';\nimport { filmsPropType } from '../propTypesConstant';\n\nconst EpisodesList = (props) => {\n  const { films, getFilms } = props;\n\n  useEffect(() => {\n    getFilms();\n  }, []);\n\n  return (\n    <div className=\"episodes\">\n      <h1 className=\"episodes__heading\">The list of the star wars episodes</h1>\n      {!films.length && <Preloader />}\n      <ul className=\"episodes__list\">\n        {films.map((film) => {\n          const filmId = film.url.slice(-2, -1);\n\n          return (\n            <li\n              key={film.episode_id}\n              className=\"episodes__item\"\n            >\n\n              <NavLink to={`/films/${filmId}`}>{film.title}</NavLink>\n            </li>\n          );\n        })}\n      </ul>\n    </div>\n  );\n};\n\nconst mapStateToProps = state => ({\n  films: state.films,\n});\n\nconst mapDispatchToProps = dispatch => ({\n  getFilms: () => dispatch(getFilmsThunk()),\n});\n\nexport default connect(mapStateToProps, mapDispatchToProps)(EpisodesList);\n\nEpisodesList.propTypes = {\n  getFilms: PropTypes.func.isRequired,\n  films: filmsPropType.isRequired,\n};\n","import PropTypes from 'prop-types';\n\nexport const filmsPropType = PropTypes.arrayOf(\n  PropTypes.shape({\n    title: PropTypes.string.isRequired,\n    episode_id: PropTypes.number.isRequired,\n    opening_crawl: PropTypes.string.isRequired,\n    director: PropTypes.string.isRequired,\n    producer: PropTypes.string.isRequired,\n    release_date: PropTypes.string.isRequired,\n    characters: PropTypes.arrayOf(PropTypes.string).isRequired,\n    planets: PropTypes.arrayOf(PropTypes.string).isRequired,\n    starships: PropTypes.arrayOf(PropTypes.string).isRequired,\n    vehicles: PropTypes.arrayOf(PropTypes.string).isRequired,\n    species: PropTypes.arrayOf(PropTypes.string).isRequired,\n    created: PropTypes.string.isRequired,\n    edited: PropTypes.string.isRequired,\n    url: PropTypes.string.isRequired,\n  }).isRequired,\n);\n\nexport const filmDetailsPropTypes = PropTypes.shape({\n  title: PropTypes.string.isRequired,\n  episode_id: PropTypes.number.isRequired,\n  opening_crawl: PropTypes.string.isRequired,\n  director: PropTypes.string.isRequired,\n  producer: PropTypes.string.isRequired,\n  release_date: PropTypes.string.isRequired,\n  characters: PropTypes.arrayOf(PropTypes.string).isRequired,\n  planets: PropTypes.arrayOf(PropTypes.string).isRequired,\n  starships: PropTypes.arrayOf(PropTypes.string).isRequired,\n  vehicles: PropTypes.arrayOf(PropTypes.string).isRequired,\n  species: PropTypes.arrayOf(PropTypes.string).isRequired,\n  created: PropTypes.string.isRequired,\n  edited: PropTypes.string.isRequired,\n  url: PropTypes.string.isRequired,\n});\n\nexport const characterPropType = PropTypes.shape({\n  name: PropTypes.string.isRequired,\n  height: PropTypes.string.isRequired,\n  mass: PropTypes.string.isRequired,\n  hair_color: PropTypes.string.isRequired,\n  skin_color: PropTypes.string.isRequired,\n  eye_color: PropTypes.string.isRequired,\n  birth_year: PropTypes.string.isRequired,\n  gender: PropTypes.string.isRequired,\n  homeworld: PropTypes.string.isRequired,\n  films: PropTypes.arrayOf(PropTypes.string).isRequired,\n  species: PropTypes.arrayOf(PropTypes.string).isRequired,\n  vehicles: PropTypes.arrayOf(PropTypes.string).isRequired,\n  starships: PropTypes.arrayOf(PropTypes.string).isRequired,\n  created: PropTypes.string.isRequired,\n  edited: PropTypes.string.isRequired,\n  url: PropTypes.string.isRequired,\n});\n\nexport const planetPropType = PropTypes.shape({\n  name: PropTypes.string.isRequired,\n  rotation_period: PropTypes.string.isRequired,\n  orbital_period: PropTypes.string.isRequired,\n  diameter: PropTypes.string.isRequired,\n  climate: PropTypes.string.isRequired,\n  gravity: PropTypes.string.isRequired,\n  terrain: PropTypes.string.isRequired,\n  surface_water: PropTypes.string.isRequired,\n  population: PropTypes.string.isRequired,\n  residents: PropTypes.arrayOf(PropTypes.string).isRequired,\n  films: PropTypes.arrayOf(PropTypes.string).isRequired,\n  created: PropTypes.string.isRequired,\n  edited: PropTypes.string.isRequired,\n  url: PropTypes.string.isRequired,\n});\n\nexport const starshipsPropType = PropTypes.shape({\n  name: PropTypes.string.isRequired,\n  model: PropTypes.string.isRequired,\n  manufacturer: PropTypes.string.isRequired,\n  cost_in_credits: PropTypes.string.isRequired,\n  length: PropTypes.string.isRequired,\n  max_atmosphering_speed: PropTypes.string.isRequired,\n  crew: PropTypes.string.isRequired,\n  passengers: PropTypes.string.isRequired,\n  cargo_capacity: PropTypes.string.isRequired,\n  consumables: PropTypes.string.isRequired,\n  hyperdrive_rating: PropTypes.string.isRequired,\n  MGLT: PropTypes.string.isRequired,\n  starship_class: PropTypes.string.isRequired,\n  pilots: PropTypes.arrayOf(PropTypes.string).isRequired,\n  films: PropTypes.arrayOf(PropTypes.string).isRequired,\n  created: PropTypes.string.isRequired,\n  edited: PropTypes.string.isRequired,\n  url: PropTypes.string.isRequired,\n});\n","import React, { useEffect } from 'react';\nimport './EpisodeDetails.scss';\nimport PropTypes from 'prop-types';\nimport { connect } from 'react-redux';\nimport { NavLink, withRouter } from 'react-router-dom';\nimport { getFilmDetailsThunk } from '../redux/reducer';\nimport { Preloader } from './common/Preloader';\nimport { filmDetailsPropTypes } from '../propTypesConstant';\nimport {\n  charUrlLength,\n  planetUrlLength,\n  starshipsUrlLength,\n} from '../constants';\n\nconst EpisodeDetails = (props) => {\n  const { details, getFilmDetails } = props;\n  const { filmId } = props.match.params;\n\n  useEffect(() => {\n    getFilmDetails(filmId);\n  }, []);\n\n  return (\n    <div className=\"details\">\n      <NavLink to=\"/\"><span>Home</span></NavLink>\n      <h1 className=\"details__heading\">Episode details</h1>\n      {!details && <Preloader />}\n      {details && (\n        <div className=\"details__details-content content\">\n          <h3 className=\"content__title\">{details.title}</h3>\n          <p className=\"content__item\">\n            <strong>Opening crawl: </strong>\n            {details.opening_crawl}\n          </p>\n          <p className=\"content__item\">\n            <strong>Director: </strong>\n            {details.director}\n          </p>\n          <p className=\"content__item\">\n            <strong>Producer: </strong>\n            {' '}\n            {details.producer}\n          </p>\n          <p className=\"content__item\">\n            <strong>Release date: </strong>\n            {' '}\n            {details.release_date}\n          </p>\n          <ul className=\"content__item\">\n            <strong>Characters:</strong>\n            {details.characters.map((char) => {\n              const charId = char.slice(charUrlLength, -1);\n\n              return (\n                <NavLink to={`/people/${charId}`} key={char}>\n                  <li>{char}</li>\n                </NavLink>\n              );\n            })}\n          </ul>\n          <ul className=\"content__item\">\n            <strong>Planets:</strong>\n            {details.planets.map((planet) => {\n              const planetId = planet.slice(planetUrlLength, -1);\n\n              return (\n                <NavLink to={`/planets/${planetId}`} key={planet}>\n                  <li>{planet}</li>\n                </NavLink>\n              );\n            })}\n          </ul>\n          <ul className=\"content__item\">\n            <strong>Starships:</strong>\n            {details.starships.map((ship) => {\n              const shipId = ship.slice(starshipsUrlLength, -1);\n\n              return (\n                <NavLink to={`/starships/${shipId}`} key={ship}>\n                  <li>{ship}</li>\n                </NavLink>\n              );\n            })}\n          </ul>\n          <ul className=\"content__item\">\n            <strong>Vehicles:</strong>\n            {details.vehicles.map(vehicle => (\n              <li key={vehicle}>{vehicle}</li>\n            ))}\n          </ul>\n          <ul className=\"content__item\">\n            <strong>Species:</strong>\n            {details.species.map(specie => (\n              <li key={specie}>{specie}</li>\n            ))}\n          </ul>\n\n        </div>\n      )}\n\n    </div>\n  );\n};\n\nconst mapStateToProps = state => ({\n  details: state.filmDetails,\n});\n\nconst mapDispatchToProps = dispatch => ({\n  getFilmDetails: filmId => dispatch(getFilmDetailsThunk(filmId)),\n});\n\nconst EpisodeDetailsWithRouter = withRouter(EpisodeDetails);\n\nexport default connect(\n  mapStateToProps, mapDispatchToProps,\n)(EpisodeDetailsWithRouter);\n\nEpisodeDetails.propTypes = {\n  getFilmDetails: PropTypes.func.isRequired,\n  match: PropTypes.shape({\n    params: PropTypes.shape({\n      filmId: PropTypes.string,\n    }).isRequired,\n  }).isRequired,\n  details: filmDetailsPropTypes,\n};\n\nEpisodeDetails.defaultProps = {\n  details: PropTypes.object,\n};\n","export const charUrlLength = 28;\nexport const planetUrlLength = 29;\nexport const starshipsUrlLength = 31;\nexport const filmsUrlLength = 27;\n","import React, { useEffect } from 'react';\nimport PropTypes from 'prop-types';\nimport { connect } from 'react-redux';\nimport { NavLink, withRouter } from 'react-router-dom';\nimport { getCharacterThunk } from '../redux/reducer';\nimport { Preloader } from './common/Preloader';\nimport { characterPropType } from '../propTypesConstant';\nimport { filmsUrlLength } from '../constants';\n\nconst Character = (props) => {\n  const { character, getCharacter } = props;\n  const { charId } = props.match.params;\n\n  useEffect(() => {\n    getCharacter(charId);\n  }, []);\n\n  return (\n    <div className=\"details\">\n      <NavLink to=\"/\"><span>Home</span></NavLink>\n      <h1 className=\"details__heading\">Character details</h1>\n      {!character && <Preloader />}\n      {character && (\n        <div className=\"details__content content\">\n          <h3 className=\"content__title\">{character.name}</h3>\n          <p className=\"content__item\">\n            <strong>Height: </strong>\n            {character.height}\n          </p>\n          <p className=\"content__item\">\n            <strong>Mass: </strong>\n            {character.mass}\n          </p>\n          <p className=\"content__item\">\n            <strong>Hair color: </strong>\n            {' '}\n            {character.hair_color}\n          </p>\n          <p className=\"content__item\">\n            <strong>Skin color: </strong>\n            {' '}\n            {character.skin_color}\n          </p>\n          <p className=\"content__item\">\n            <strong>Eye color: </strong>\n            {' '}\n            {character.eye_color}\n          </p>\n          <p className=\"content__item\">\n            <strong>Birth year: </strong>\n            {' '}\n            {character.birth_year}\n          </p>\n          <p className=\"content__item\">\n            <strong>Gender: </strong>\n            {' '}\n            {character.gender}\n          </p>\n          <p className=\"content__item\">\n            <strong>Home world: </strong>\n            {' '}\n            {character.homeworld}\n          </p>\n          <ul className=\"content__item\">\n            <strong>Films:</strong>\n            {character.films.map((film) => {\n              const filmId = film.slice(filmsUrlLength, -1);\n\n              return (\n                <NavLink to={`/films/${filmId}`} key={film}>\n                  <li>{film}</li>\n                </NavLink>\n              );\n            })}\n          </ul>\n          <ul className=\"content__item\">\n            <strong>Species:</strong>\n            {character.species.map(specie => (\n              <li key={specie}>{specie}</li>\n            ))}\n          </ul>\n          <ul className=\"content__item\">\n            <strong>Vehicles:</strong>\n            {character.vehicles.map(vehicle => (\n              <li key={vehicle}>{vehicle}</li>\n            ))}\n          </ul>\n          <ul className=\"content__item\">\n            <strong>Starships:</strong>\n            {character.starships.map(starship => (\n              <li key={starship}>{starship}</li>\n            ))}\n          </ul>\n\n        </div>\n      )}\n\n    </div>\n  );\n};\n\nconst mapStateToProps = state => ({\n  character: state.character,\n});\n\nconst mapDispatchToProps = dispatch => ({\n  getCharacter: charId => dispatch(getCharacterThunk(charId)),\n});\n\nconst CharacterWithRouter = withRouter(Character);\n\nexport default connect(\n  mapStateToProps, mapDispatchToProps,\n)(CharacterWithRouter);\n\nCharacter.propTypes = {\n  getCharacter: PropTypes.func.isRequired,\n  match: PropTypes.shape({\n    params: PropTypes.shape({\n      charId: PropTypes.string,\n    }).isRequired,\n  }).isRequired,\n  character: characterPropType,\n};\n\nCharacter.defaultProps = {\n  character: PropTypes.object,\n};\n","import React, { useEffect } from 'react';\nimport PropTypes from 'prop-types';\nimport { connect } from 'react-redux';\nimport { NavLink, withRouter } from 'react-router-dom';\nimport { getPlanetThunk } from '../redux/reducer';\nimport { Preloader } from './common/Preloader';\nimport { planetPropType } from '../propTypesConstant';\n\nconst Planet = (props) => {\n  const { planet, getPlanet } = props;\n  const { planetId } = props.match.params;\n\n  useEffect(() => {\n    getPlanet(planetId);\n  }, []);\n\n  return (\n    <div className=\"details\">\n      <NavLink to=\"/\"><span>Home</span></NavLink>\n      <h1 className=\"details__heading\">Planet details</h1>\n      {!planet && <Preloader />}\n      {planet && (\n        <div className=\"details__content content\">\n          <h3 className=\"content__title\">{planet.name}</h3>\n          <p className=\"content__item\">\n            <strong>Rotation period: </strong>\n            {planet.rotation_period}\n          </p>\n          <p className=\"content__item\">\n            <strong>Orbital period: </strong>\n            {planet.orbital_period}\n          </p>\n          <p className=\"content__item\">\n            <strong>Diameter: </strong>\n            {' '}\n            {planet.diameter}\n          </p>\n          <p className=\"content__item\">\n            <strong>Climate: </strong>\n            {' '}\n            {planet.climate}\n          </p>\n          <p className=\"content__item\">\n            <strong>Gravity: </strong>\n            {' '}\n            {planet.gravity}\n          </p>\n          <p className=\"content__item\">\n            <strong>Terrain: </strong>\n            {' '}\n            {planet.terrain}\n          </p>\n          <p className=\"content__item\">\n            <strong>Surface water: </strong>\n            {' '}\n            {planet.surface_water}\n          </p>\n          <p className=\"content__item\">\n            <strong>Population: </strong>\n            {' '}\n            {planet.population}\n          </p>\n          <ul className=\"content__item\">\n            <strong>Residents:</strong>\n            {planet.residents.map((resident) => {\n              const charId = resident.slice(-2, -1);\n\n              return (\n                <NavLink to={`/people/${charId}`} key={resident}>\n                  <li>{resident}</li>\n                </NavLink>\n              );\n            })}\n          </ul>\n          <ul className=\"content__item\">\n            <strong>Films:</strong>\n            {planet.films.map((film) => {\n              const filmId = film.slice(-2, -1);\n\n              return (\n                <NavLink to={`/films/${filmId}`} key={film}>\n                  <li>{film}</li>\n                </NavLink>\n              );\n            })}\n          </ul>\n\n        </div>\n      )}\n\n    </div>\n  );\n};\n\nconst mapStateToProps = state => ({\n  planet: state.planet,\n});\n\nconst mapDispatchToProps = dispatch => ({\n  getPlanet: planetId => dispatch(getPlanetThunk(planetId)),\n});\n\nconst PlanetWithRouter = withRouter(Planet);\n\nexport default connect(\n  mapStateToProps, mapDispatchToProps,\n)(PlanetWithRouter);\n\nPlanet.propTypes = {\n  getPlanet: PropTypes.func.isRequired,\n  match: PropTypes.shape({\n    params: PropTypes.shape({\n      planetId: PropTypes.string,\n    }).isRequired,\n  }).isRequired,\n  planet: planetPropType,\n};\n\nPlanet.defaultProps = {\n  planet: PropTypes.object,\n};\n","import React, { useEffect } from 'react';\nimport PropTypes from 'prop-types';\nimport { connect } from 'react-redux';\nimport { NavLink, withRouter } from 'react-router-dom';\nimport { getStarshipThunk } from '../redux/reducer';\nimport { Preloader } from './common/Preloader';\nimport { starshipsPropType } from '../propTypesConstant';\n\nconst Starship = (props) => {\n  const { starship, getStarship } = props;\n  const { starshipId } = props.match.params;\n\n  useEffect(() => {\n    getStarship(starshipId);\n  }, []);\n\n  return (\n    <div className=\"details\">\n      <NavLink to=\"/\"><span>Home</span></NavLink>\n      <h1 className=\"details__heading\">Starship details</h1>\n      {!starship && <Preloader />}\n      {starship && (\n        <div className=\"details__content content\">\n          <h3 className=\"content__title\">{starship.name}</h3>\n          <p className=\"content__item\">\n            <strong>Model: </strong>\n            {starship.model}\n          </p>\n          <p className=\"content__item\">\n            <strong>Manufacturer: </strong>\n            {starship.manufacturer}\n          </p>\n          <p className=\"content__item\">\n            <strong>Cost in credits: </strong>\n            {' '}\n            {starship.cost_in_credits}\n          </p>\n          <p className=\"content__item\">\n            <strong>Length: </strong>\n            {' '}\n            {starship.length}\n          </p>\n          <p className=\"content__item\">\n            <strong>Max atmosphering speed: </strong>\n            {' '}\n            {starship.max_atmosphering_speed}\n          </p>\n          <p className=\"content__item\">\n            <strong>Crew: </strong>\n            {' '}\n            {starship.crew}\n          </p>\n          <p className=\"content__item\">\n            <strong>Passengers: </strong>\n            {' '}\n            {starship.passengers}\n          </p>\n          <p className=\"content__item\">\n            <strong>Cargo capacity: </strong>\n            {' '}\n            {starship.cargo_capacity}\n          </p>\n          <p className=\"content__item\">\n            <strong>Consumables: </strong>\n            {' '}\n            {starship.consumables}\n          </p>\n          <p className=\"content__item\">\n            <strong>Hyperdrive rating: </strong>\n            {' '}\n            {starship.hyperdrive_rating}\n          </p>\n          <p className=\"content__item\">\n            <strong>MGLT: </strong>\n            {' '}\n            {starship.MGLT}\n          </p>\n          <p className=\"content__item\">\n            <strong>Starship class: </strong>\n            {' '}\n            {starship.starship_class}\n          </p>\n          <ul className=\"content__item\">\n            <strong>Pilots:</strong>\n            {starship.pilots.map((pilot) => {\n              const charId = pilot.slice(-2, -1);\n\n              return (\n                <NavLink to={`/people/${charId}`}>\n                  <li key={pilot}>{pilot}</li>\n                </NavLink>\n              );\n            })}\n          </ul>\n          <ul className=\"content__item\">\n            <strong>Films:</strong>\n            {starship.films.map((film) => {\n              const filmId = film.slice(-2, -1);\n\n              return (\n                <NavLink to={`/films/${filmId}`} key={film}>\n                  <li>{film}</li>\n                </NavLink>\n              );\n            })}\n          </ul>\n\n        </div>\n      )}\n\n    </div>\n  );\n};\n\nconst mapStateToProps = state => ({\n  starship: state.starship,\n});\n\nconst mapDispatchToProps = dispatch => ({\n  getStarship: starshipId => dispatch(getStarshipThunk(starshipId)),\n});\n\nconst StarshipWithRouter = withRouter(Starship);\n\nexport default connect(\n  mapStateToProps, mapDispatchToProps,\n)(StarshipWithRouter);\n\nStarship.propTypes = {\n  getStarship: PropTypes.func.isRequired,\n  match: PropTypes.shape({\n    params: PropTypes.shape({\n      starshipId: PropTypes.string,\n    }).isRequired,\n  }).isRequired,\n  starship: starshipsPropType,\n};\n\nStarship.defaultProps = {\n  starship: PropTypes.object,\n};\n","import React from 'react';\nimport './App.scss';\nimport './resets.scss';\nimport { Route } from 'react-router-dom';\nimport EpisodesList from './components/EpisodesList';\nimport EpisodeDetails from './components/EpisodeDetails';\nimport Character from './components/Character';\nimport Planet from './components/Planet';\nimport Starship from './components/Starship';\n\nconst App = () => (\n  <div className=\"app-wrapper\">\n    <Route path=\"/\" component={EpisodesList} exact />\n    <Route path=\"/films/:filmId\" component={EpisodeDetails} />\n    <Route path=\"/people/:charId\" component={Character} />\n    <Route path=\"/planets/:planetId\" component={Planet} />\n    <Route path=\"/starships/:starshipId\" component={Starship} />\n  </div>\n);\n\nexport default App;\n","import { createStore, applyMiddleware } from 'redux';\nimport thunkMiddleware from 'redux-thunk';\nimport { reducer } from './reducer';\n\nexport const store = createStore(reducer, applyMiddleware(thunkMiddleware));\n\nwindow.store = store;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport { HashRouter } from 'react-router-dom';\nimport { Provider } from 'react-redux';\nimport App from './App';\nimport { store } from './redux/store';\n\nReactDOM.render(\n  <HashRouter>\n    <Provider store={store}>\n      <App />\n    </Provider>\n  </HashRouter>,\n  document.getElementById('root'),\n);\n"],"sourceRoot":""}